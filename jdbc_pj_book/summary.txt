플젝가이드


DTO(Data Transfer Object) : 데이터 전송 객체
		
		입력(Insert), 수정(Update) :  화면을 통해 ~> setter 로 전달 ~> 멤버변수 ~> getter을 통해 ~> DataBase에 전달
		조회(SELECT) : setter(DB) ~> 멤버변수 ~> getter을 통해 ~> 화면에 전달
		
		
		
DAO(Data Access Object) : 데이터 접근 객체

		=> CRUD(입력, 수정, 삭제, 조회)

     
화면단(View)(현재는 콘솔) : BookMain ~> Menu ~> 메뉴선택
백엔드단(비즈니스로직구현)  : 
					~> BookController (mv'C', 컨트롤러)
                    ~> Model('M'vc, 모델)  => 서비스 + DAO + DTO
                    
           ~> BookServiceImpl(BookService) ~> BookDAOImpl(BookDAO) 
                (서비스)                 (DAO : 데이터 입력수정삭제조회 = DB작업)		
                (ㄴ DAO 호출, 결과리턴)      

--------------------------------------------------------------------------------
--    2025.6.23
-- [ JDBC 테이블 생성 ] --



-- 1) 도서정보 테이블
DROP TABLE mvc_book_tbl CASCADE CONSTRAINTS;
CREATE TABLE mvc_book_tbl(
	bookid 		NUMBER(4)		PRIMARY KEY,	-- 도서번호
	title       VARCHAR2(50)	NOT NULL,		-- 도서명
	author		VARCHAR2(50)	NOT NULL,		-- 저자
	publisher	VARCHAR2(50)	NOT NULL, 		-- 출판사
	price		NUMBER(7)		NOT NULL,		-- 가격
	pubdate		DATE      		DEFAULT sysdate	-- 출판일
);

SELECT * FROM mvc_book_tbl;



-----------------------------------------------------------------------------------
--   2025.7.1


1. 플젝생성
2. 패키지 및 파일 생성
3. 테이블 생성
4. DTO 구현
5. 전체 구현
(전체구현)
ㄴ Main -> Menu -> View -> Controller -> Service -> DTO + DAO 
				  View <- Controller <- Service <- DTO + DAO 


Model(모델): 고객의 요청을 처리 -> DB처리 (입력, 수정, 삭제, 조회 CRUD)
View(뷰)  : 결과화면
Controller(컨트롤러) : 고객의 요청 및 흐름제어 담당

6. DAOImpl에 Singleton 구현

pstmt.executeUpdate();   // I, U, D 에 사용된다. 리턴타입은 int => 성공(1), 실패(0)
pstmt.executeQuery();	 // Select절에 사용된다. 리턴타입은 ReseultSet


// 에러정리
java.sql.SQLException : 인덱스에서 누락된 IN 또는 OUT 매개변수
=> ?와 pstmt 설정 갯수가 맞지 않을 때

// 추가 성공 여부
sql developer에서 select 성공












